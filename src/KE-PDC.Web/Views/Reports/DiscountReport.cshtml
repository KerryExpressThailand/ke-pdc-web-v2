@{
    ViewData["Title"] = "Discount Report";
    ViewData["Action"] = "verify";
}

@section links {
    <link rel="stylesheet" href="~/lib/bootstrap-select/dist/css/bootstrap-select.css" />
    <link rel="stylesheet" href="~/lib/jquery.bootgrid/dist/jquery.bootgrid.min.css" />
    <link rel="stylesheet" href="~/assets/vendor/thbank-font/css/thbanklogos.min.css" />
    <link rel="stylesheet" href="~/assets/stylesheets/confirm.css" />
    <style>
        .divider-y:after {
            content: "";
            width: 1px;
            background-color: #eeeeee;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
        }
    </style>
}

@section scripts {
    <script src="~/lib/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="~/lib/jquery.bootgrid/dist/jquery.bootgrid.min.js"></script>
    <script src="~/lib/jquery-mask-plugin/dist/jquery.mask.min.js"></script>
    <script src="~/lib/jquery-maskmoney/dist/jquery.maskMoney.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/moment/min/moment-with-locales.min.js"></script>
    <script src="~/lib/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/lib/bootstrap-tagsinput/dist/bootstrap-tagsinput.js"></script>
    <script src="~/lib/matchheight/dist/jquery.matchHeight-min.js"></script>
    <script src="~/assets/javascripts/bootstrap-select-default.js"></script>
    <script src="~/assets/javascripts/jquery.bootgrid-default.js"></script>
    <script src="~/assets/javascripts/jquery.bootstrap-datetimepicker.js"></script>
    <script src="~/assets/javascripts/jquery.validation-default.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            let fractionDigits = { minimumFractionDigits: 2, maximumFractionDigits: 2 };

            // FORM SEARCH
            // ======================
            var searchFirstTime = true;
            var gridSearchResults;

            $('[type=reset]').click(function (e) {
                e.preventDefault();
                $(this).closest('form').get(0).reset();
                $("select").selectpicker('render');
            });

            @*$('#search').on('click', function () {
                var BranchIdList = $('select[name="BranchList"]').val();
                var DiscountTypeList =  $('select[name="DiscountType"]').val();
                var DateFrom =  $('input[name="DateFrom"]').val();
                var DateTo = $('input[name="DateTo"]').val() || "@DateTime.Now.ToString("dd/MM/yyyy", new CultureInfo("en-US"))";
                $.ajax({
                    type: "POST",
                    url: endpoint + "Discount",
                    data: JSON.stringify({ BranchIdList: BranchIdList, DateFrom: DateFrom, DateTo: DateTo, DiscountTypeList: DiscountTypeList }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    processData: false,
                    success: function (response) {
                        console.log(response)
                        console.log(response.data["result"])
                    },
                    error: function (e) {
                        swal("Oops!", "Can't Upload Excel", "error")
                        return false;
                    }

                });
            });*@
            $("#form-search").validate({
                submitHandler: function (form) {
                    $.pageLoader("show");
                    var $form = $(form);

                    if (searchFirstTime) {
                        searchFirstTime = false;

                        gridSearchResults = $("#grid-search-results").bootgrid({
                            ajaxSettings: {
                                method: "POST",
                            },
                            url: endpoint + "Discount",
                            requestHandler: function (request) {
                                var BranchList = $form.find('select[name="BranchList"]').val(),
                                    request = {
                                        BranchType: $form.find('select[name="BranchType"]').val(),
                                        BranchList: typeof BranchList == "object" ? BranchList.join(",") : BranchList,
                                        BranchIdList: $form.find('select[name="BranchList"]').val(),
                                        DiscountTypeList: $form.find('select[name="DiscountType"]').val(),
                                        DateFrom: $form.find('input[name="DateFrom"]').val(),
                                        DateTo: $form.find('input[name="DateTo"]').val() || "@DateTime.Now.ToString("dd/MM/yyyy", new CultureInfo("en-US"))",

                                        // Pagination
                                        page: request.current,
                                        perPage: request.rowCount,
                                        order: Object.keys(request.sort)[0],
                                        direction: request.sort[Object.keys(request.sort)[0]],
                                        searchPhrase: request.searchPhrase,
                                    };

                                $("#grid-search-results").data("export-params", request);

                                return request;
                            },
                            sorting: false,
                            selection: true,
                            multiSelect: true,
                            templates: {
                                header: '<div id="{{ctx.id}}" class="{{css.header}}"><div class="row"><div class="col-md-4"><h2 class="card-title form-control-static"><button class="btn btn-primary sr-only" data-command="confirm-select">Confirm Select</button></h2></div><div class="col-md-8 actionBar"><p class="{{css.actions}}"></p><div class="btn-group m-l-20">@if (ViewData["Action"].Equals("") || true) { <buttom class="btn btn-default" data-ke-action="export" data-ke-filetype="excel" data-ke-target="#grid-search-results">@SharedLocalizer["Export (Excel)"]</buttom>}@if (ViewData["Action"].Equals("linetopupremittance")) { <buttom class="btn btn-default" data-ke-action="export" data-ke-filetype="pdf" data-ke-target="#grid-search-results"><i class="ion-document-text"></i> @SharedLocalizer["Export (PDF)"]</buttom>}</div></div></div></div>',
                            },
                            formatters: {
                                erpid: function (column, row) {
                                    var chkerp = row.erpid == null ? '-' : row.erpid
                                    console.log(row.erpid + row.branchId + "discountAmount:  " + row.discountAmount)
                                    return chkerp
                                }
                            }
                        }).on("loaded.rs.jquery.bootgrid", function () {
                            $.pageLoader("hide");

                            gridSearchResults
                            .find('[data-toggle="tooltip"]').tooltip({
                                container: "body",
                            }).end();
                        });
                        
                        $("#card-search-results").delay(500).fadeIn(300);
                    }
                    else {
                        gridSearchResults.bootgrid("reload");
                    }
                }
            });

            $("#form-detail").on('change', 'input.maskmoney', function () {
                var adj = 0,
                    totalTeansfer = $('#form-detail [data-column-id="totalTransfer"]').data('val');

                $.each($("#form-detail input.maskmoney"), function (k, v) {
                    adj += parseFloat($(v).val().replace(/[^\d\.\-]/g, ""));
                });
                var totalNetTransfer = totalTeansfer + (adj);
                $('#form-detail [data-column-id="totalNetTransfer"]').text(totalNetTransfer.toLocaleString(undefined, fractionDigits))
            });

            // SUBMIT DAILY REVENUE DETAIL
            // ======================
            $("#form-detail").validate({
                submitHandler: function (form) {
                    var $form = $(form),
                        type = $form.data("type"),
                        text = type == "verify" ? "Verify" : "Confirm",
                        textAfter = type == "verify" ? "Verified" : "Confirmed";

                    swal({
                        title: "Are you sure?",
                        text: text + " this information to be recorded",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-outline-primary",
                        confirmButtonText: "Yes, " + text + " it!",
                        closeOnConfirm: false
                    }, function () {
                        var $form = $(form),
                            id = $form.data("row-id");

                        var getVal = function (selector) {
                            return parseFloat($form.find(selector).val().replace(/[^\d\.\-]/g, ""))
                        }

                        $.post(endpoint + "DailyRevenueVerify", {
                            Type: type,
                            Branch: $form.find('input[name="Branch"]').val(),
                            ReportDate: $form.find('input[name="ReportDate"]').val(),
                            VerifyDate: $form.find('input[name="VerifyDate"]').val(),
                            RemittanceDate: $form.find('input[name="RemittanceDate"]').val(),

                            // Money
                            Comm: getVal('input[name="Comm"]'),
                            AdjCreditCard: getVal('input[name="AdjCreditCard"]'),
                            Other: getVal('input[name="Other"]'),
                            Return: getVal('input[name="Return"]'),
                            Suspensse: getVal('input[name="Suspensse"]'),
                            WithHoldingTax: getVal('input[name="WithHoldingTax"]'),
                            Promotion: getVal('input[name="Promotion"]'),
                            BankCharge: getVal('input[name="BankCharge"]'),
                            AdjLinePay: getVal('input[name="AdjLinePay"]'),
                            //add by kathawutpa 17/7/2019 for project sales x
                            Project: getVal('input[name="Project"]'),

                            // Remark
                            CommRemark: $form.find('input[name="CommRemark"]').val(),
                            AdjCreditCardRemark: $form.find('input[name="AdjCreditCardRemark"]').val(),
                            OtherRemark: $form.find('input[name="OtherRemark"]').val(),
                            ReturnRemark: $form.find('input[name="ReturnRemark"]').val(),
                            SuspensseRemark: $form.find('input[name="SuspensseRemark"]').val(),
                            WithHoldingTaxRemark: $form.find('input[name="WithHoldingTaxRemark"]').val(),
                            PromotionRemark: $form.find('input[name="PromotionRemark"]').val(),
                            BankChargeRemark: $form.find('input[name="BankChargeRemark"]').val(),
                            AdjLinePayRemark: $form.find('input[name="AdjLinePayRemark"]').val(),
                            //add by kathawutpa 17/7/2019 for project sales x
                            ProjectRemark: $form.find('input[name="ProjectRemark"]').val(),
                        }, function (response) {
                            if (response.success) {
                                if (type == "verify") {
                                    $('#grid-search-results tr[data-row-id="' + id + '"]').remove();
                                }
                                $('#modal-confirm').modal("hide");
                                swal(textAfter, response.messages[0], "success");
                            }
                            else {
                                var message = response.messages.length > 0 ? response.messages[0] : response.errors[0].message;
                                swal("Error", message, "error");
                                return false;
                            }
                        });
                    });
                }
            });

            // EXPORT
            // ======================
            $("body").on("click", '[data-ke-action="export"]', function (e) {
                var $this = $(this),
                    $target = $($this.data("ke-target")),
                    params = $target.data("export-params"),
                    filetype = $this.data("ke-filetype"),
                    type = $this.data("ke-type");

                params.filetype = filetype;
                params.type = type;
                console.log(type)

                var form = $('<form/>');
                form.attr('action', endpoint + 'Discount').attr('method', 'POST').attr('target', '_blank');

                $.each(params, function (k, v) {
                    console.log(k)
                    if (typeof v !== 'undefined') {
                        $(form).append($('<input name="' + k + '" value="' + v + '" type="hidden">'));
                    }
                });

                $('body').append(form);

                form.submit();
                form.remove();
            });
        });

    </script>
}

<div class="block-header">
    <h2 class="block-title">@ViewData["Title"]</h2>
</div>

@await Html.PartialAsync("FormSearch/_TypeDiscountToPartial")

<div id="card-search-results" class="card" style="display: none;">
    <div class="card-body table-responsive">
        <div>
            <table id="grid-search-results" class="table table-card table-bordered table-condensed table-hover unordered">
                <thead>
                    <tr>
                        <th data-column-id="erpid" data-formatter="erpid" data-css-class="bg-m-blue bg-m-lighten-5" data-header-css-class="bg-m-blue bg-m-lighten-4">@SharedLocalizer["ERP ID"]</th>
                        <th data-column-id="branchId" data-css-class="bg-m-blue bg-m-lighten-5" data-header-css-class="bg-m-blue bg-m-lighten-4">@SharedLocalizer["Branch"]</th>
                        <th data-column-id="branchType" data-header-align="center" data-css-class="text-center" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Branch type"]</th>
                        <th data-column-id="discountAmount" data-type="decimal"data-header-align="center" data-css-class="text-center" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Discount Amount"]</th>
                        <th data-column-id="discountCode" data-header-align="center" data-css-class="text-center" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Discount Code"]</th>
                        <th data-column-id="discountType" data-header-align="center" data-css-class="text-center" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Discount Type"]</th>
                        <th data-column-id="receiptNo" data-header-align="center" data-css-class="text-center" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Receipt No"]</th>
                        <th data-column-id="receiptDate" data-type="date" data-header-align="center" data-css-class="text-center" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Receipt Date"]</th>
                        <th data-column-id="senderMobile" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Sender Mobile"]</th>
                        <th data-column-id="senderName"  data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Sender Name"]</th>
                        <th data-column-id="surcharge" data-type="decimal"data-header-align="center" data-css-class="text-center" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Surcharge"]</th>
            
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@await Html.PartialAsync("Modal/_DailyRevenueDetailPartial")