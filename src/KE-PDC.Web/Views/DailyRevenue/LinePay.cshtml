@{
    ViewData["Title"] = "LinePay Verify";
    ViewData["Action"] = "confirm";
}

@section links {
    <link rel="stylesheet" href="~/lib/bootstrap-select/dist/css/bootstrap-select.css" />
    <link rel="stylesheet" href="~/lib/jquery.bootgrid/dist/jquery.bootgrid.min.css" />
    <link rel="stylesheet" href="~/assets/vendor/thbank-font/css/thbanklogos.min.css" />
    <link rel="stylesheet" href="~/assets/stylesheets/confirm.css" />
}

@section scripts {
    <script src="~/lib/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="~/lib/jquery.bootgrid/dist/jquery.bootgrid.min.js"></script>
    <script src="~/lib/jquery-mask-plugin/dist/jquery.mask.min.js"></script>
    <script src="~/lib/jquery-maskmoney/dist/jquery.maskMoney.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/moment/min/moment-with-locales.min.js"></script>
    <script src="~/lib/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/lib/bootstrap-tagsinput/dist/bootstrap-tagsinput.js"></script>
    <script src="~/lib/matchheight/dist/jquery.matchHeight-min.js"></script>
    <script src="~/assets/javascripts/bootstrap-select-default.js"></script>
    <script src="~/assets/javascripts/jquery.bootgrid-default.js"></script>
    <script src="~/assets/javascripts/jquery.bootstrap-datetimepicker.js"></script>
    <script src="~/assets/javascripts/jquery.validation-default.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            let fractionDigits = { minimumFractionDigits: 2, maximumFractionDigits: 2 };

            // FORM SEARCH
            // ======================
            var searchFirstTime = true;
            var gridSearchResults;

            $('[type=reset]').click(function (e) {
                e.preventDefault();
                $(this).closest('form').get(0).reset();
                $("select").selectpicker('render');
            });

            $('#modal-confirm').on("show.bs.modal", function () {
                //$(this).find('input[name="CommRemark"], input[name="OtherRemark"], input[name="ReturnRemark"], input[name="SuspensseRemark"], input[name="WithHoldingTaxRemark"], input[name="PromotionRemark"]').val("");
            });

            $('[data-command="verify-select"]').on("click", function(e) {
                e.preventDefault();
                var checked = $("#grid-search-results tbody input:checked"),
                    idList = [];

                for (var i = 0; i < checked.length; i++) {
                    idList.push(checked.eq(i).val());
                }

                if (idList.length == 0) {
                    swal("Verify Select", "Please select the information to be updated!", "warning")
                }
                else {
                    swal({
                        title: "Are you sure?",
                        text: "Verify this select to be recorded",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-outline-primary",
                        confirmButtonText: "Yes, Verify it!",
                        closeOnConfirm: false
                    }, function () {
                        //$.post(endpoint + "DailyRevenueVerify", {
                        //    IDs: idList.join(),
                        //}, function (response) {
                        //    if (response.success) {
                        //        $.each(idList, function (index, value) {
                        //            $('#grid-search-results tr[data-row-id="' + value + '"]')
                        //            .addClass("bg-m-gray bg-m-lighten-3 text-m-gray").removeClass("active")
                        //            .find(".select-box").prop("disabled", true).prop("checked", false).removeClass("select-box").addClass("select-box-disabled")
                        //            .end().find('[data-command="edit"]').prop("disabled", true).removeClass("btn-outline-warning").addClass("btn-default")
                        //            .end().find('td [data-id="comfirm-status"]').html('<div data-id="comfirm-status" class="text-success"><i class="ion-checkmark-round"></i> Comfirmed</div>');
                        //        });

                        //        swal("Verified", response.messages[0], "success");
                        //    }
                        //    else {
                        //        var message = response.messages.length > 0 ? response.messages[0] : response.errors[0].message;
                        //        swal("Error", message, "error");
                        //        return false;
                        //    }
                        //});
                        swal("Verified", response.messages[0], "success");
                    });
                }
            });

            $("#form-search").validate({
                submitHandler: function (form) {
                    $.pageLoader("show");
                    var $form = $(form);

                    if (searchFirstTime) {

                        searchFirstTime = false;

                        gridSearchResults = $("#grid-search-results").bootgrid({
                            ajaxSettings: {
                                method: "POST",
                            },
                            url: endpoint + "DailyRevenueVerify/Get",
                            requestHandler: function (request) {
                                var BranchList = $form.find('select[name="BranchList"]').val(),
                                    request = {
                                        BranchType: $form.find('select[name="BranchType"]').val(),
                                        BranchList: typeof BranchList == "object" ? BranchList.join(",") : BranchList,
                                        DateFrom: $form.find('input[name="DateFrom"]').val(),
                                        DateTo: $form.find('input[name="DateTo"]').val() || "@DateTime.Now.ToString("dd/MM/yyyy", new CultureInfo("en-US"))",

                                        // Pagination
                                        page: request.current,
                                        perPage: request.rowCount,
                                        order: Object.keys(request.sort)[0],
                                        direction: request.sort[Object.keys(request.sort)[0]],
                                        searchPhrase: request.searchPhrase,
                                    };

                                $("#grid-search-results").data("export-params", request);

                                return request;
                            },
                            sorting: false,
                            selection: true,
                            multiSelect: true,
                            templates: {
                                header: '<div id="{{ctx.id}}" class="{{css.header}}"><div class="row"><div class="col-md-4"><h2 class="card-title form-control-static">@SharedLocalizer["Search Results"]</h2></div><div class="col-md-8 actionBar"><p class="{{css.actions}}"></p><div class="btn-group m-l-20">@if (true) { <buttom class="btn btn-default" data-ke-action="export" data-ke-filetype="excel" data-ke-target="#grid-search-results">@SharedLocalizer["Export (Excel)"]</buttom> <buttom class="btn btn-default" data-ke-action="export" data-ke-filetype="excelMSI" data-ke-target="#grid-search-results">@Localizer["Export JV (Excel)"]</buttom>}@if (false) { <buttom class="btn btn-default" data-ke-action="export" data-ke-filetype="pdf" data-ke-target="#grid-search-results"><i class="ion-document-text"></i> @SharedLocalizer["Export (PDF)"]</buttom>}</div></div></div></div>',
                            },
                            formatters: {
                                verifydate: function (column, row) {
                                    return "<span title=\"" + row.capturedBy + "\" data-toggle=\"tooltip\">" + moment(row.verifyDate).format("DD/MM/YYYY") + "</span>";
                                },
                                captured: function (column, row) {
                                    return row[column.id] ? "Yes" : "No";
                                },
                                commands: function (column, row) {
                                    var btnEditClass = (row.approved/* || row.tudVerifyDate != null*/) ? "btn-default" : "btn-outline-warning";
                                    return '<button class="btn btn-xs btn-default" data-command="view" data-row-id="' + row.id + '" data-row-branch="' + row.branchID + '" data-row-report-date="' + row.reportDate + '"><i class="ion-search"></i> View</button>'
                                        + ' <button class="btn btn-xs ' + btnEditClass + '" data-command="edit" data-row-id="' + row.id + '" data-row-branch="' + row.branchID + '" data-row-report-date="' + row.reportDate + '"' + ((row.approved/* || row.tudVerifyDate != null*/) ? "disabled" : "") + '><i class="ion-edit"></i> Edit</button>';
                                },
                                closeShopStatus: function (column, row) {
                                    var status = /*row.verifyFreight && row.verifyCOD && row.verifyInsurance && row.verifyPackage && row.verifySalePackage && row.verifyLineTopUp && row.verifyDiscount && row.verifyShipments && row.verifyBoxes && row.verifyDropoffBoxes && row.verifyCash && row.verifyRabbit && row.verifyCreditBBL && row.verifyCreditSCB && row.verifyQRPayment && */row.verifyLinePay/* && row.verifyTransportation && row.verifyVASSurcharge && row.verifyVat*/
                                    return '<input type="text" name="status" value="' + status + '" style="display: none;">' +
                                        (status
                                            ? '<div class="text-success"><i class="ion-checkmark-round"></i> Pass</div>'
                                            : '<div class="text-danger">Incorrect</div>');
                                },
                                status: function (column, row) {
                                    var arrStatus = [null, true, false]
                                    var status = arrStatus[Math.floor((Math.random() * 3))];

                                    var input = '<input type="text" name="status" value="' + status + '" style="display: none;">'

                                    if (status === true) {
                                        return input + '<span class="text-success">Matched</span>'
                                    }
                                    else if (status === false) {
                                        return input + '<span class="text-danger">Unmatched</span>'
                                    }
                                    else {
                                        return input + 'No Transfer';
                                    }
                                }
                            }
                        })
                        .on("loaded.rs.jquery.bootgrid", function () {
                            $.pageLoader("hide");

                            gridSearchResults.find('[data-command="edit"][disabled]').parents("tr")
                            .addClass("bg-m-gray bg-m-lighten-3 text-m-gray")
                            .find(".select-box").prop("disabled", true).removeClass("select-box").addClass("select-box-disabled");

                            gridSearchResults.find('[name="closeShopStatus"][value!="true"]').parents("tr").addClass("bg-m-gray bg-m-lighten-3 text-m-gray").find(".select-box").prop("disabled", true).removeClass("select-box").addClass("select-box-disabled")
                            gridSearchResults.find('[name="status"][value!="true"]').parents("tr").addClass("bg-m-gray bg-m-lighten-3 text-m-gray").find(".select-box").prop("disabled", true).removeClass("select-box").addClass("select-box-disabled")
                            gridSearchResults.find('[data-command="view"], [data-command="verify"], [data-command="edit"]').on("click", function () {
                                var that = this,
                                    id = $(this).data("row-id"),
                                    branch = $(this).data("row-branch"),
                                    reportDate = $(this).data("row-report-date"),
                                    command = $(this).data("command");

                                $.pageLoader("show");

                                $("#form-detail").data("row-id", id);

                                $.get(endpoint + "DailyRevenueDetail/" + branch, {
                                    ReportDate: reportDate,
                                }, function (response) {
                                    var result = response.result;
                                    if (response.success) {
                                        $.each(result, function (key, value) {
                                            var $e = $("#form-detail").find('[data-column-id="' + key + '"]'),
                                                type = $e.data("type"),
                                                textValue = "-";

                                            switch (type) {
                                                case "numeric":
                                                    textValue = value.toLocaleString();
                                                    break;
                                                case "decimal":
                                                    textValue = value.toLocaleString(undefined, fractionDigits);
                                                    break;
                                                case "date":
                                                    textValue = value == null ? "-" : moment(value).format("DD/MM/YYYY");
                                                    break;
                                            }

                                            $e.text(textValue);
                                        });

                                        var totalService = (result.freight + result.cod + result.insur + result.package + result.salePackage + result.lineTopUp) - result.discount,
                                            totalPayment = result.cash + result.rabbit + result.credit + result.linePay + + result.qrPay,
                                            totalSurcharge = (result.transportation + result.vasSurcharge + result.vat) - result.discount,
                                            bsdTotalAccout = (result.bsdSurcharge) - result.discountBSD,
                                            bsdTotalPayment = result.bsdCash + result.bsdLinePay,
                                            bsdTotalPaymentCash = result.bsdCash + result.bsdLineTopUp;

                                        var totalNetTransfer = result.totalTransfer + (result.bonusCommission + result.adjOther + result.returnCharge + result.suspense + result.withHoldingTax + result.promotion + result.bankCharge + result.adjCreditCard + result.adjLinePay);

                                        $("#form-detail")
                                        .find('[data-column-id="totalTransfer"]').text(result.totalTransfer.toLocaleString(undefined, fractionDigits))
                                        .end().find('[data-column-id="totalNetTransfer"]').text(totalNetTransfer.toLocaleString(undefined, fractionDigits))
                                        .end().find('[data-column-id="totalService"]').text(totalService.toLocaleString(undefined, fractionDigits))
                                        .end().find('[data-column-id="totalPayment"]').text(totalPayment.toLocaleString(undefined, fractionDigits))
                                        .end().find('[data-column-id="totalSurcharge"]').text(totalSurcharge.toLocaleString(undefined, fractionDigits))
                                        .end().find('[data-column-id="bsdTotalAccout"]').text(bsdTotalAccout.toLocaleString(undefined, fractionDigits))
                                        .end().find('[data-column-id="bsdTotalPayment"]').text(bsdTotalPayment.toLocaleString(undefined, fractionDigits))
                                        .end().find('[data-column-id="bsdTotalPaymentCash"]').text(bsdTotalPaymentCash.toLocaleString(undefined, fractionDigits));

                                        $('#modal-confirm')
                                        .find(".maskmoney").val("")
                                        .end().find('[data-column-id="erP_ID"]').text(result.erP_ID || 'N\A')
                                        .end().find('[data-column-id="branchID"]').text(branch)
                                        .end().find('[data-column-id="reportDate"]').text(moment(reportDate).format("DD/MM/YYYY"))
                                        .end().find(".maskmoney").val("0.00")
                                        .end().find('input[name="Branch"]').val(branch)
                                        .end().find('input[name="ReportDate"]').val(reportDate)

                                        .end().find('input[name="Comm"]').val(parseFloat(result.bonusCommission).toFixed(2))
                                        .end().find('input[name="AdjCreditCard"]').val(parseFloat(result.adjCreditCard).toFixed(2))
                                        .end().find('input[name="Other"]').val(parseFloat(result.adjOther).toFixed(2))
                                        .end().find('input[name="Return"]').val(parseFloat(result.returnCharge).toFixed(2))
                                        .end().find('input[name="Suspensse"]').val(parseFloat(result.suspense).toFixed(2))
                                        .end().find('input[name="WithHoldingTax"]').val(parseFloat(result.withHoldingTax).toFixed(2))
                                        .end().find('input[name="Promotion"]').val(parseFloat(result.promotion).toFixed(2))
                                        .end().find('input[name="BankCharge"]').val(parseFloat(result.bankCharge).toFixed(2))
                                        .end().find('input[name="AdjLinePay"]').val(parseFloat(result.adjLinePay).toFixed(2))

                                        .end().find('input[name="CommRemark"]').val(result.bonusCommissionRemark)
                                        .end().find('input[name="AdjCreditCardRemark"]').val(result.adjCreditCardRemark)
                                        .end().find('input[name="OtherRemark"]').val(result.adjOtherRemark)
                                        .end().find('input[name="ReturnRemark"]').val(result.returnChargeRemark)
                                        .end().find('input[name="SuspensseRemark"]').val(result.suspenseRemark)
                                        .end().find('input[name="WithHoldingTaxRemark"]').val(result.withHoldingTaxRemark)
                                        .end().find('input[name="PromotionRemark"]').val(result.promotionRemark)
                                        .end().find('input[name="BankChargeRemark"]').val(result.bankChargeRemark)
                                        .end().find('input[name="AdjLinePayRemark"]').val(result.adjLinePayRemark)

                                        .end().find('input[name="VerifyDate"]').val(moment(result.verifyDate).format("DD/MM/YYYY"))
                                        .end().find('input[name="RemittanceDate"]').val(moment(result.remittanceDate).format("DD/MM/YYYY"))

                                        .end().find('input').prop("disabled", (command == "view"))
                                        .end().find('button[type="submit"]').css("display", function () {
                                            return command == "view" ? "none" : "inline-block";
                                        })
                                        .end().find('#VerifyDate').data('min-date', moment(reportDate))
                                        .end().modal("show");

                                        $.pageLoader("hide");
                                    }
                                    else {
                                        var message = response.messages.length > 0 ? response.messages[0] : response.errors[0].message;
                                        swal("Error", message, "error");
                                        return false;
                                    }
                                });
                            }).end()
                            .find('[data-toggle="tooltip"]').tooltip({
                                container: "body",
                            }).end();
                        });

                        $("#card-search-results, #card-search-status").delay(500).fadeIn(300);
                    }
                    else {
                        gridSearchResults.bootgrid("reload");
                    }
                }
            });

            $("#form-detail").on('change', 'input.maskmoney', function () {
                var adj = 0,
                    totalTeansfer = $('#form-detail [data-column-id="totalTransfer"]').data('val') || 0;

                $.each($("#form-detail input.maskmoney"), function (k, v) {
                    adj += parseFloat($(v).val().replace(/[^\d\.\-]/g, ""));
                });
                var totalNetTransfer = totalTeansfer + (adj);
                $('#form-detail [data-column-id="totalNetTransfer"]').text(totalNetTransfer.toLocaleString(undefined, fractionDigits))
            });

            // SUBMIT UPDATE DAILY REVENUE DETAIL
            // ======================
            $("#form-detail").validate({
                submitHandler: function (form) {
                    var $form = $(form),
                        type = $form.data("type"),
                        text = type == "verify" ? "Verify" : "Confirm",
                        textAfter = type == "verify" ? "Verified" : "Confirmed";

                    swal({
                        title: "Are you sure?",
                        text: text + " this information to be recorded",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: "btn-outline-primary",
                        confirmButtonText: "Yes, " + text + " it!",
                        closeOnVerify: false
                    }, function () {
                        var $form = $(form),
                            id = $form.data("row-id");

                        var getVal = function (selector) {
                            return parseFloat($form.find(selector).val().replace(/[^\d\.\-]/g, ""))
                        }

                        $.ajax({
                            url: endpoint + "DailyRevenueVerify",
                            method: "PUT",
                            data: {
                                Branch: $form.find('input[name="Branch"]').val(),
                                ReportDate: $form.find('input[name="ReportDate"]').val(),
                                VerifyDate: $form.find('input[name="VerifyDate"]').val(),
                                RemittanceDate: $form.find('input[name="RemittanceDate"]').val(),

                                // Money
                                Comm: getVal('input[name="Comm"]'),
                                AdjCreditCard: getVal('input[name="AdjCreditCard"]'),
                                Other: getVal('input[name="Other"]'),
                                Return: getVal('input[name="Return"]'),
                                Suspensse: getVal('input[name="Suspensse"]'),
                                WithHoldingTax: getVal('input[name="WithHoldingTax"]'),
                                Promotion: getVal('input[name="Promotion"]'),
                                BankCharge: getVal('input[name="BankCharge"]'),
                                AdjLinePay: getVal('input[name="AdjLinePay"]'),

                                // Remark
                                CommRemark: $form.find('input[name="CommRemark"]').val(),
                                AdjCreditCardRemark: $form.find('input[name="AdjCreditCardRemark"]').val(),
                                OtherRemark: $form.find('input[name="OtherRemark"]').val(),
                                ReturnRemark: $form.find('input[name="ReturnRemark"]').val(),
                                SuspensseRemark: $form.find('input[name="SuspensseRemark"]').val(),
                                WithHoldingTaxRemark: $form.find('input[name="WithHoldingTaxRemark"]').val(),
                                PromotionRemark: $form.find('input[name="PromotionRemark"]').val(),
                                BankChargeRemark: $form.find('input[name="BankChargeRemark"]').val(),
                                AdjLinePayRemark: $form.find('input[name="AdjLinePayRemark"]').val(),
                            },
                            success: function (response) {
                                if (response.success) {
                                    if (type == "verify") {
                                        $('#grid-search-results tr[data-row-id="' + id + '"]').remove();
                                    }
                                    $('#modal-confirm').modal("hide");
                                    swal(textAfter, response.messages[0], "success");
                                }
                                else {
                                    var message = response.messages.length > 0 ? response.messages[0] : response.errors[0].message;
                                    swal("Error", message, "error");
                                    return false;
                                }
                            }
                        });
                    });
                }
            });

            // EXPORT
            // ======================
            $("body").on("click", '[data-ke-action="export"]', function (e) {
                var $this = $(this),
                    $target = $($this.data("ke-target")),
                    params = $target.data("export-params"),
                    filetype = $this.data("ke-filetype"),
                    type = $this.data("ke-type");

                params.filetype = filetype;
                params.type = type;

                var form = $('<form/>');

                form.attr('action', endpoint + 'DailyRevenueVerify/Get').attr('method', 'POST').attr('target', '_blank');

                if (filetype == 'excelMSI') {
                    form.attr('action', endpoint + 'DailyRevenueVerify/Pivot').attr('method', 'POST').attr('target', '_blank');
                }


                $.each(params, function (k, v) {
                    if (typeof v !== 'undefined') {
                        $(form).append($('<input name="' + k + '" value="' + v + '" type="hidden">'));
                    }
                });

                $('body').append(form);

                form.submit();
                form.remove();
            });

            $('#LinePayTabs a').click(function (e) {
                e.preventDefault();
                var type = $(this).data("type"),
                    grid = $("#grid-search-results");

                $('#form-search input[name="TypeLine"]').val(type);

                grid.bootgrid("destroy");

                searchFirstTime = true;

                $("#form-search").trigger("submit");
            });
        });

    </script>
}

<div class="block-header">
    <h2 class="block-title">@ViewData["Title"]</h2>
</div>

@await Html.PartialAsync("FormSearch/_TypeBranchDateFromDateToPartial")

<div id="card-search-results" class="card" style="display: none;">
    <div class="card-body table-responsive">
        <div>
            <table id="grid-search-results" class="table table-card table-bordered table-condensed table-hover unordered">
                <thead>
                    <tr class="bg-m-amber bg-m-lighten-5">
                        <th data-column-id="id" data-identifier="true" data-visible="false" data-visible-in-selection="false"></th>
                        <th data-column-id="erP_ID" data-css-class="bg-m-blue bg-m-lighten-5" data-header-css-class="bg-m-blue bg-m-lighten-4">@SharedLocalizer["ERP ID"]</th>
                        <th data-column-id="branchID" data-css-class="bg-m-blue bg-m-lighten-5" data-header-css-class="bg-m-blue bg-m-lighten-4">@SharedLocalizer["Branch"]</th>
                        <th data-column-id="closeShopStatus" data-formatter="closeShopStatus" data-css-class="text-center" data-header-align="center" data-header-css-class="bg-m-amber bg-m-lighten-5" data-width="auto; white-space: nowrap !important">@Localizer["Close Shop Status"]</th>
                        <th data-column-id="commands" data-formatter="commands" data-css-class="text-center text-nowrap" data-header-align="center" data-header-css-class="bg-m-amber bg-m-lighten-5" data-width="auto; white-space: nowrap !important">@Localizer["Commands"]</th>
                        <th data-column-id="status" data-formatter="status" data-css-class="text-center" data-header-align="center" data-header-css-class="bg-m-amber bg-m-lighten-5" data-width="auto; white-space: nowrap !important">@Localizer["Status"]</th>
                        <th data-column-id="reportDate" data-type="date" data-header-align="center" data-css-class="text-center" data-header-css-class="bg-m-amber bg-m-lighten-5">@SharedLocalizer["Report date"]</th>
                        <th data-column-id="tranferDate" data-type="date" data-header-align="center" data-css-class="text-right" data-header-css-class="bg-m-amber bg-m-lighten-5">@Localizer["Tranfer Date"]</th>
                        <th data-column-id="linePay" data-type="decimal" data-header-align="right" data-css-class="text-right" data-header-css-class="bg-m-amber bg-m-lighten-5">@Localizer["LinePay)"]</th>
                        <th data-column-id="bank" data-type="decimal" data-header-align="right" data-css-class="text-right" data-header-css-class="bg-m-amber bg-m-lighten-5">@Localizer["Bank"]</th>
                        <th data-column-id="variance" data-type="decimal" data-header-align="right" data-css-class="text-right" data-header-css-class="bg-m-amber bg-m-lighten-5">@Localizer["Variance"]</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="container-fluid m-l-15 m-b-15">
            <button class="btn btn-primary" data-command="verify-select">Verify Select</button>
        </div>
    </div>
</div>

@await Html.PartialAsync("Modal/_DailyRevenueDetailPartial")